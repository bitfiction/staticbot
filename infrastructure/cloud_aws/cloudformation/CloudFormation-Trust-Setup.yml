AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template to create IAM role with S3 access and cross-account trust relationship'

Parameters:
  TrustedAccountId:
    Type: String
    Default: ${{ StaticbotAccountId }} 
    Description: AWS Account ID that will be trusted to assume this role
  ExternalId:
    Type: String
    Default: ${{ ExternalId }} 
    Description: External ID for additional security when assuming the role
    MinLength: 1

Resources:
  CrossAccountRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: staticbot-crossaccount-operator
      Description: Role for StaticBot cross-account access
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: 
                - !Sub 'arn:aws:iam::${TrustedAccountId}:role/staticbot-dev-cross-account-operator-0'
                - !Sub 'arn:aws:iam::${TrustedAccountId}:role/staticbot-dev-cross-account-operator-1'
                - !Sub 'arn:aws:iam::${TrustedAccountId}:assumed-role/staticbot-dev-cross-account-operator-0/StaticbotSession'
                - !Sub 'arn:aws:iam::${TrustedAccountId}:assumed-role/staticbot-dev-cross-account-operator-1/StaticbotSession'
            Action: 'sts:AssumeRole'
            Condition:
              StringEquals:
                'sts:ExternalId': !Ref ExternalId
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess'
      Policies:
        - PolicyName: S3CustomAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:DeleteObject'
                  - 's3:ListBucket'
                Resource:
                  - 'arn:aws:s3:::*'
                  - 'arn:aws:s3:::*/*'
        - PolicyName: Route53Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'route53:*'
                Resource:
                  - '*'
        - PolicyName: StaticbotResourcesAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:*'
                  - 'cloudfront:*'
                  - 'acm:*'
                  - 'iam:*'
                  - 'dynamodb:*'
                Resource:
                  - 'arn:aws:s3:::staticbot*'
                  - 'arn:aws:s3:::staticbot*/*'
                  - 'arn:aws:cloudfront::*:*'
                  - 'arn:aws:route53:::*'
                  - 'arn:aws:acm:*:*:certificate/*'
                  - 'arn:aws:iam::*:role/staticbot*'
                  - 'arn:aws:iam::*:policy/staticbot*'
                  - 'arn:aws:dynamodb:*:*:table/staticbot*'

Outputs:
  RoleARN:
    Description: ARN of the created IAM role
    Value: !GetAtt CrossAccountRole.Arn
